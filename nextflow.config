//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.

params {
    help = false
    out_dir = "output"
    fastq = null
    sanitize_fastq = false
    sample = null
    sample_sheet = null
    min_len = null
    max_len = null
    max_softclip_length = null
    normalise = 200
    report_depth = 100
    medaka_model = "r941_min_hac_variant_g507"
    scheme_name = "SARS-CoV-2"
    scheme_dir = "primer_schemes"
    scheme_version = "ARTIC/V3"
    list_schemes = false
    custom_scheme = null
    genotype_variants = null
    report_clade = true
    report_lineage = true
    report_coverage = true
    report_variant_summary = true
    report_detailed = false
    wfversion = "v0.3.18"
    pangolin_version = "4.1.2"
    pangolin_options = null
    nextclade_version = "1.11.0"
    nextclade_data_tag = null
    update_data = false
    aws_image_prefix = null
    aws_queue = null
    lab_id = null
    testkit = null
    report_name = "report"
    process_label = "artic"

    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,pangolin_version,nextclade_version,wfversion,wf,process_label'

    wf {
      example_cmd = [
          "--fastq test_data/sars-samples-demultiplexed",
          "--sample_sheet test_data/sample_sheet.csv"
      ]
  }
}

manifest {
    name            = 'epi2me-labs/wf-artic'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-artic'
    description     = 'Workflow for SARS-CoV-2 Network ARTIC analysis.'
    mainScript      = 'main.nf'
    nextflowVersion = '>=20.10.0'
}

executor {
    $local {
        cpus = 4
        memory = "8 GB"
    }
}

process {
            withLabel:artic { container = "ontresearch/wf-artic:${params.wfversion}" }
            withLabel:pangolin { container = "ontresearch/pangolin:${params.pangolin_version}" }
            withLabel:nextclade { container = "ontresearch/nextclade:${params.nextclade_version}" }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }

profiles {

    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
            }
        }
         // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }

    //our local slurm/podman configuration
    cluster {
        process.executor = 'slurm'
        docker.enabled = false
        podman.enabled = true
        podman.runOptions = "--user 0:0 --group-add 100"
    }


    // profile using conda environments rather than docker
    // containers
    conda {
        docker.enabled = false
        process {
            withLabel:artic { conda = "${projectDir}/environment.yaml" }
            withLabel:pangolin { conda = "bioconda::pangolin=${params.pangolin_version} conda-forge::git" }
            withLabel:nextclade { conda = "bioconda::nextclade=${params.nextclade_version} conda-forge::git" }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
        conda {
             cacheDir = ""
             useMamba = true
        }
    }

    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:artic {
                container = "${params.aws_image_prefix}-wf-artic:${params.wfversion}"
            }
            withLabel:pangolin {
                container = "${params.aws_image_prefix}-pangolin:${params.pangolin_version}"
            }
            withLabel:nextclade {
                container = "${params.aws_image_prefix}-nextclade:${params.nextclade_version}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }


    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
}
dag {
  enabled = true
  file = "${params.out_dir}/execution/pipeline.svg"
}
